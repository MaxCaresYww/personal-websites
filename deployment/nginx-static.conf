# Nginx configuration for static files deployment
server {
    listen 80;
    listen [::]:80;
    # IP-only deployment (no domain yet). Later replace with: server_name example.com www.example.com;
    server_name _;

    # Redirect HTTP to HTTPS (uncomment after certificates are issued)
    # return 301 https://$host$request_uri;

    # Atomic deploy symlink root (points to /var/www/yourname.com/releases/<ts>)
    root /var/www/personal-website/current;
    index index.html;

    # Security headers (minimal on HTTP). Full set incl. HSTS should live ONLY on the 443 server block.
    add_header Content-Security-Policy "default-src 'self'; img-src 'self' data: https:; script-src 'self'; style-src 'self'; font-src 'self' data:; object-src 'none'; base-uri 'self'; frame-ancestors 'none'; form-action 'self'; upgrade-insecure-requests" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    # NOTE: Add this ONLY on HTTPS block later:
    # add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/x-javascript
        application/xml+rss
        application/javascript
        application/json
        application/xml
        application/xhtml+xml
        application/x-font-ttf
        application/vnd.ms-fontobject
        font/opentype
        image/svg+xml
        image/x-icon;
    gzip_disable "MSIE [1-6]\.";

    # Cache static assets (immutable by hash)
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff2?|ttf|eot|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # HTML pages (short cache, rely on ETag)
    location ~* \.html$ {
        expires 60s;
        add_header Cache-Control "public, max-age=60";
    }

    # Primary routing: only serve existing exported files.
    # (If later you want client-side SPA fallback, change '=404' to '/index.html')
    location / {
        try_files $uri $uri.html $uri/ =404;
    }

    # Handle 404 errors
    error_page 404 /404.html;

    # Security: deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Prevent access to sensitive files
    location ~* \.(env|config|log)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Logging
    access_log /var/log/nginx/personal-website.access.log;  # Consider 'main' format customization
    error_log /var/log/nginx/personal-website.error.log warn;
}

# HTTPS configuration (will be added by certbot)
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     server_name yourname.com www.yourname.com;
#
#     # SSL configuration will be managed by certbot
#     
#     # ... rest of the configuration same as above ...
# }